// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths.Organization {
    public var projects: Projects {
        Projects(path: path + "/projects")
    }

    public struct Projects {
        /// Path: `/organization/projects`
        public let path: String

        /// Returns a list of projects.
        public func get(parameters: GetParameters? = nil) -> Request<OpenAIAPI.ProjectListResponse> {
            Request(path: path, method: "GET", query: parameters?.asQuery, id: "list-projects")
        }

        public struct GetParameters {
            public var limit: Int?
            public var after: String?
            public var isIncludeArchived: Bool?

            public init(limit: Int? = nil, after: String? = nil, isIncludeArchived: Bool? = nil) {
                self.limit = limit
                self.after = after
                self.isIncludeArchived = isIncludeArchived
            }

            public var asQuery: [(String, String?)] {
                let encoder = URLQueryEncoder()
                encoder.encode(limit, forKey: "limit")
                encoder.encode(after, forKey: "after")
                encoder.encode(isIncludeArchived, forKey: "include_archived")
                return encoder.items
            }
        }

        /// Create a new project in the organization. Projects can be created and archived, but cannot be deleted.
        public func post(_ body: OpenAIAPI.ProjectCreateRequest) -> Request<OpenAIAPI.Project> {
            Request(path: path, method: "POST", body: body, id: "create-project")
        }
    }
}
