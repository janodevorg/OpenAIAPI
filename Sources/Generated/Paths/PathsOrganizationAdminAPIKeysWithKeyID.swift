// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths.Organization.AdminAPIKeys {
    public func keyID(_ keyID: String) -> WithKeyID {
        WithKeyID(path: "\(path)/\(keyID)")
    }

    public struct WithKeyID {
        /// Path: `/organization/admin_api_keys/{key_id}`
        public let path: String

        /// Retrieve a single organization API key
        ///
        /// Get details for a specific organization API key by its ID.
        public var get: Request<OpenAIAPI.AdminAPIKey> {
            Request(path: path, method: "GET", id: "admin-api-keys-get")
        }

        /// Delete an organization admin API key
        ///
        /// Delete the specified admin API key.
        public var delete: Request<DeleteResponse> {
            Request(path: path, method: "DELETE", id: "admin-api-keys-delete")
        }

        public struct DeleteResponse: Decodable {
            /// Example: "key_abc"
            public var id: String?
            /// Example: "organization.admin_api_key.deleted"
            public var object: String?
            /// Example: true
            public var isDeleted: Bool?

            public init(id: String? = nil, object: String? = nil, isDeleted: Bool? = nil) {
                self.id = id
                self.object = object
                self.isDeleted = isDeleted
            }

            public init(from decoder: Decoder) throws {
                let values = try decoder.container(keyedBy: StringCodingKey.self)
                self.id = try values.decodeIfPresent(String.self, forKey: "id")
                self.object = try values.decodeIfPresent(String.self, forKey: "object")
                self.isDeleted = try values.decodeIfPresent(Bool.self, forKey: "deleted")
            }
        }
    }
}
