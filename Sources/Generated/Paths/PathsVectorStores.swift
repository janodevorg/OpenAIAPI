// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths {
    public static var vectorStores: VectorStores {
        VectorStores(path: "/vector_stores")
    }

    public struct VectorStores {
        /// Path: `/vector_stores`
        public let path: String

        /// Returns a list of vector stores.
        public func get(parameters: GetParameters? = nil) -> Request<OpenAIAPI.ListVectorStoresResponse> {
            Request(path: path, method: "GET", query: parameters?.asQuery, id: "listVectorStores")
        }

        public struct GetParameters {
            public var limit: Int?
            public var order: Order?
            public var after: String?
            public var before: String?

            public enum Order: String, Codable, CaseIterable {
                case asc
                case desc
            }

            public init(limit: Int? = nil, order: Order? = nil, after: String? = nil, before: String? = nil) {
                self.limit = limit
                self.order = order
                self.after = after
                self.before = before
            }

            public var asQuery: [(String, String?)] {
                let encoder = URLQueryEncoder()
                encoder.encode(limit, forKey: "limit")
                encoder.encode(order, forKey: "order")
                encoder.encode(after, forKey: "after")
                encoder.encode(before, forKey: "before")
                return encoder.items
            }
        }

        /// Create a vector store.
        public func post(_ body: OpenAIAPI.CreateVectorStoreRequest) -> Request<OpenAIAPI.VectorStoreObject> {
            Request(path: path, method: "POST", body: body, id: "createVectorStore")
        }
    }
}
