// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// Represents an individual project.
public struct Project: Codable {
    /// The identifier, which can be referenced in API endpoints
    public var id: String
    /// The object type, which is always `organization.project`
    public var object: Object
    /// The name of the project. This appears in reporting.
    public var name: String
    /// The Unix timestamp (in seconds) of when the project was created.
    public var createdAt: Int
    /// The Unix timestamp (in seconds) of when the project was archived or `null`.
    public var archivedAt: Int?
    /// `active` or `archived`
    public var status: Status

    /// The object type, which is always `organization.project`
    public enum Object: String, Codable, CaseIterable {
        case organizationProject = "organization.project"
    }

    /// `active` or `archived`
    public enum Status: String, Codable, CaseIterable {
        case active
        case archived
    }

    public init(id: String, object: Object, name: String, createdAt: Int, archivedAt: Int? = nil, status: Status) {
        self.id = id
        self.object = object
        self.name = name
        self.createdAt = createdAt
        self.archivedAt = archivedAt
        self.status = status
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.id = try values.decode(String.self, forKey: "id")
        self.object = try values.decode(Object.self, forKey: "object")
        self.name = try values.decode(String.self, forKey: "name")
        self.createdAt = try values.decode(Int.self, forKey: "created_at")
        self.archivedAt = try values.decodeIfPresent(Int.self, forKey: "archived_at")
        self.status = try values.decode(Status.self, forKey: "status")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(id, forKey: "id")
        try values.encode(object, forKey: "object")
        try values.encode(name, forKey: "name")
        try values.encode(createdAt, forKey: "created_at")
        try values.encodeIfPresent(archivedAt, forKey: "archived_at")
        try values.encode(status, forKey: "status")
    }
}
