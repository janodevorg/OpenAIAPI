// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// Send this event when you want to remove any item from the conversation 
/// history. The server will respond with a `conversation.item.deleted` event, 
/// unless the item does not exist in the conversation history, in which case the 
/// server will respond with an error.
public struct RealtimeClientEventConversationItemDelete: Codable {
    /// Optional client-generated ID used to identify this event.
    public var eventID: String?
    /// The event type, must be `conversation.item.delete`.
    public var type: `Type`
    /// The ID of the item to delete.
    public var itemID: String

    /// The event type, must be `conversation.item.delete`.
    public enum `Type`: String, Codable, CaseIterable {
        case conversationItemDelete = "conversation.item.delete"
    }

    public init(eventID: String? = nil, type: `Type`, itemID: String) {
        self.eventID = eventID
        self.type = type
        self.itemID = itemID
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.eventID = try values.decodeIfPresent(String.self, forKey: "event_id")
        self.type = try values.decode(`Type`.self, forKey: "type")
        self.itemID = try values.decode(String.self, forKey: "item_id")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(eventID, forKey: "event_id")
        try values.encode(type, forKey: "type")
        try values.encode(itemID, forKey: "item_id")
    }
}
