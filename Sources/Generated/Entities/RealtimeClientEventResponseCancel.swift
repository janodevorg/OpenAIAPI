// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// Send this event to cancel an in-progress response. The server will respond 
/// with a `response.cancelled` event or an error if there is no response to 
/// cancel.
public struct RealtimeClientEventResponseCancel: Codable {
    /// Optional client-generated ID used to identify this event.
    public var eventID: String?
    /// The event type, must be `response.cancel`.
    public var type: `Type`
    /// A specific response ID to cancel - if not provided, will cancel an 
    /// in-progress response in the default conversation.
    public var responseID: String?

    /// The event type, must be `response.cancel`.
    public enum `Type`: String, Codable, CaseIterable {
        case responseCancel = "response.cancel"
    }

    public init(eventID: String? = nil, type: `Type`, responseID: String? = nil) {
        self.eventID = eventID
        self.type = type
        self.responseID = responseID
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.eventID = try values.decodeIfPresent(String.self, forKey: "event_id")
        self.type = try values.decode(`Type`.self, forKey: "type")
        self.responseID = try values.decodeIfPresent(String.self, forKey: "response_id")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(eventID, forKey: "event_id")
        try values.encode(type, forKey: "type")
        try values.encodeIfPresent(responseID, forKey: "response_id")
    }
}
