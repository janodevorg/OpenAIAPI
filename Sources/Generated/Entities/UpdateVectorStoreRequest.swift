// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct UpdateVectorStoreRequest: Codable {
    /// The name of the vector store.
    public var name: String?
    /// Vector store expiration policy
    ///
    /// The expiration policy for a vector store.
    public var expiresAfter: VectorStoreExpirationAfter?
    /// Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maximum of 512 characters long.
    public var metadata: [String: AnyJSON]?

    public init(name: String? = nil, expiresAfter: VectorStoreExpirationAfter? = nil, metadata: [String: AnyJSON]? = nil) {
        self.name = name
        self.expiresAfter = expiresAfter
        self.metadata = metadata
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.name = try values.decodeIfPresent(String.self, forKey: "name")
        self.expiresAfter = try values.decodeIfPresent(VectorStoreExpirationAfter.self, forKey: "expires_after")
        self.metadata = try values.decodeIfPresent([String: AnyJSON].self, forKey: "metadata")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(name, forKey: "name")
        try values.encodeIfPresent(expiresAfter, forKey: "expires_after")
        try values.encodeIfPresent(metadata, forKey: "metadata")
    }
}
