// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// Controls which (if any) tool is called by the model.
/// `none` means the model will not call any tool and instead generates a message.
/// `auto` means the model can pick between generating a message or calling one or more tools.
/// `required` means the model must call one or more tools.
/// Specifying a particular tool via `{"type": "function", "function": {"name": "my_function"}}` forces the model to call that tool.
/// 
/// `none` is the default when no tools are present. `auto` is the default if tools are present.
public enum ChatCompletionToolChoiceOption: Codable {
    case object(Object)
    case chatCompletionNamedToolChoice(ChatCompletionNamedToolChoice)

    /// `none` means the model will not call any tool and instead generates a message. `auto` means the model can pick between generating a message or calling one or more tools. `required` means the model must call one or more tools.
    public enum Object: String, Codable, CaseIterable {
        case `none`
        case auto
        case required
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        if let value = try? container.decode(Object.self) {
            self = .object(value)
        } else if let value = try? container.decode(ChatCompletionNamedToolChoice.self) {
            self = .chatCompletionNamedToolChoice(value)
        } else {
            throw DecodingError.dataCorruptedError(
                in: container,
                debugDescription: "Data could not be decoded as any of the expected types (Object, ChatCompletionNamedToolChoice)."
            )
        }
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.singleValueContainer()
        switch self {
        case .object(let value): try container.encode(value)
        case .chatCompletionNamedToolChoice(let value): try container.encode(value)
        }
    }
}
