// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct ListBatchesResponse: Codable {
    public var data: [Batch]
    /// Example: "batch_abc123"
    public var firstID: String?
    /// Example: "batch_abc456"
    public var lastID: String?
    public var hasMore: Bool
    public var object: Object

    public enum Object: String, Codable, CaseIterable {
        case list
    }

    public init(data: [Batch], firstID: String? = nil, lastID: String? = nil, hasMore: Bool, object: Object) {
        self.data = data
        self.firstID = firstID
        self.lastID = lastID
        self.hasMore = hasMore
        self.object = object
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.data = try values.decode([Batch].self, forKey: "data")
        self.firstID = try values.decodeIfPresent(String.self, forKey: "first_id")
        self.lastID = try values.decodeIfPresent(String.self, forKey: "last_id")
        self.hasMore = try values.decode(Bool.self, forKey: "has_more")
        self.object = try values.decode(Object.self, forKey: "object")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(data, forKey: "data")
        try values.encodeIfPresent(firstID, forKey: "first_id")
        try values.encodeIfPresent(lastID, forKey: "last_id")
        try values.encode(hasMore, forKey: "has_more")
        try values.encode(object, forKey: "object")
    }
}
