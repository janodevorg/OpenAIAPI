// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct FineTune: Codable {
    public var id: String
    public var object: String
    public var createdAt: Int
    public var updatedAt: Int
    public var model: String
    public var fineTunedModel: String?
    public var organizationID: String
    public var status: String
    public var hyperparams: UnknownDictionary
    public var trainingFiles: [OpenAIFile]
    public var validationFiles: [OpenAIFile]
    public var resultFiles: [OpenAIFile]
    public var events: [FineTuneEvent]?

    public init(id: String, object: String, createdAt: Int, updatedAt: Int, model: String, fineTunedModel: String? = nil, organizationID: String, status: String, hyperparams: UnknownDictionary, trainingFiles: [OpenAIFile], validationFiles: [OpenAIFile], resultFiles: [OpenAIFile], events: [FineTuneEvent]? = nil) {
        self.id = id
        self.object = object
        self.createdAt = createdAt
        self.updatedAt = updatedAt
        self.model = model
        self.fineTunedModel = fineTunedModel
        self.organizationID = organizationID
        self.status = status
        self.hyperparams = hyperparams
        self.trainingFiles = trainingFiles
        self.validationFiles = validationFiles
        self.resultFiles = resultFiles
        self.events = events
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.id = try values.decode(String.self, forKey: "id")
        self.object = try values.decode(String.self, forKey: "object")
        self.createdAt = try values.decode(Int.self, forKey: "created_at")
        self.updatedAt = try values.decode(Int.self, forKey: "updated_at")
        self.model = try values.decode(String.self, forKey: "model")
        self.fineTunedModel = try values.decodeIfPresent(String.self, forKey: "fine_tuned_model")
        self.organizationID = try values.decode(String.self, forKey: "organization_id")
        self.status = try values.decode(String.self, forKey: "status")
        self.hyperparams = try values.decode(UnknownDictionary.self, forKey: "hyperparams")
        self.trainingFiles = try values.decode([OpenAIFile].self, forKey: "training_files")
        self.validationFiles = try values.decode([OpenAIFile].self, forKey: "validation_files")
        self.resultFiles = try values.decode([OpenAIFile].self, forKey: "result_files")
        self.events = try values.decodeIfPresent([FineTuneEvent].self, forKey: "events")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(id, forKey: "id")
        try values.encode(object, forKey: "object")
        try values.encode(createdAt, forKey: "created_at")
        try values.encode(updatedAt, forKey: "updated_at")
        try values.encode(model, forKey: "model")
        try values.encodeIfPresent(fineTunedModel, forKey: "fine_tuned_model")
        try values.encode(organizationID, forKey: "organization_id")
        try values.encode(status, forKey: "status")
        try values.encode(hyperparams, forKey: "hyperparams")
        try values.encode(trainingFiles, forKey: "training_files")
        try values.encode(validationFiles, forKey: "validation_files")
        try values.encode(resultFiles, forKey: "result_files")
        try values.encodeIfPresent(events, forKey: "events")
    }
}
