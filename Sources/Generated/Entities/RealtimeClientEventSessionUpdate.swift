// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// Send this event to update the sessionâ€™s default configuration. The client may 
/// send this event at any time to update the session configuration, and any 
/// field may be updated at any time, except for "voice". The server will respond 
/// with a `session.updated` event that shows the full effective configuration. 
/// Only fields that are present are updated, thus the correct way to clear a 
/// field like "instructions" is to pass an empty string.
public struct RealtimeClientEventSessionUpdate: Codable {
    /// Optional client-generated ID used to identify this event.
    public var eventID: String?
    /// The event type, must be `session.update`.
    public var type: `Type`
    /// Realtime session object configuration.
    public var session: RealtimeSessionCreateRequest

    /// The event type, must be `session.update`.
    public enum `Type`: String, Codable, CaseIterable {
        case sessionUpdate = "session.update"
    }

    public init(eventID: String? = nil, type: `Type`, session: RealtimeSessionCreateRequest) {
        self.eventID = eventID
        self.type = type
        self.session = session
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.eventID = try values.decodeIfPresent(String.self, forKey: "event_id")
        self.type = try values.decode(`Type`.self, forKey: "type")
        self.session = try values.decode(RealtimeSessionCreateRequest.self, forKey: "session")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(eventID, forKey: "event_id")
        try values.encode(type, forKey: "type")
        try values.encode(session, forKey: "session")
    }
}
