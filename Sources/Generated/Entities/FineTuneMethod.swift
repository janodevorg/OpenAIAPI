// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// The method used for fine-tuning.
public struct FineTuneMethod: Codable {
    /// The type of method. Is either `supervised` or `dpo`.
    public var type: `Type`?
    /// Configuration for the supervised fine-tuning method.
    public var supervised: FineTuneSupervisedMethod?
    /// Configuration for the DPO fine-tuning method.
    public var dpo: FineTuneDPOMethod?

    /// The type of method. Is either `supervised` or `dpo`.
    public enum `Type`: String, Codable, CaseIterable {
        case supervised
        case dpo
    }

    public init(type: `Type`? = nil, supervised: FineTuneSupervisedMethod? = nil, dpo: FineTuneDPOMethod? = nil) {
        self.type = type
        self.supervised = supervised
        self.dpo = dpo
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.type = try values.decodeIfPresent(`Type`.self, forKey: "type")
        self.supervised = try values.decodeIfPresent(FineTuneSupervisedMethod.self, forKey: "supervised")
        self.dpo = try values.decodeIfPresent(FineTuneDPOMethod.self, forKey: "dpo")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(type, forKey: "type")
        try values.encodeIfPresent(supervised, forKey: "supervised")
        try values.encodeIfPresent(dpo, forKey: "dpo")
    }
}
