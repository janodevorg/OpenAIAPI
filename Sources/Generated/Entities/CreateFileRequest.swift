// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct CreateFileRequest: Codable {
    /// The File object (not file name) to be uploaded.
    public var file: Data
    /// The intended purpose of the uploaded file.
    /// 
    /// Use "assistants" for [Assistants](/docs/api-reference/assistants) and [Message](/docs/api-reference/messages) files, "vision" for Assistants image file inputs, "batch" for [Batch API](/docs/guides/batch), and "fine-tune" for [Fine-tuning](/docs/api-reference/fine-tuning).
    public var purpose: Purpose

    /// The intended purpose of the uploaded file.
    /// 
    /// Use "assistants" for [Assistants](/docs/api-reference/assistants) and [Message](/docs/api-reference/messages) files, "vision" for Assistants image file inputs, "batch" for [Batch API](/docs/guides/batch), and "fine-tune" for [Fine-tuning](/docs/api-reference/fine-tuning).
    public enum Purpose: String, Codable, CaseIterable {
        case assistants
        case batch
        case fineTune = "fine-tune"
        case vision
    }

    public init(file: Data, purpose: Purpose) {
        self.file = file
        self.purpose = purpose
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.file = try values.decode(Data.self, forKey: "file")
        self.purpose = try values.decode(Purpose.self, forKey: "purpose")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(file, forKey: "file")
        try values.encode(purpose, forKey: "purpose")
    }
}
