// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// Image content part
///
/// Learn about [image inputs](/docs/guides/vision).
public struct ChatCompletionRequestMessageContentPartImage: Codable {
    /// The type of the content part.
    public var type: `Type`
    public var imageURL: ImageURL

    /// The type of the content part.
    public enum `Type`: String, Codable, CaseIterable {
        case imageURL = "image_url"
    }

    public struct ImageURL: Codable {
        /// Either a URL of the image or the base64 encoded image data.
        public var url: URL
        /// Specifies the detail level of the image. Learn more in the [Vision guide](/docs/guides/vision#low-or-high-fidelity-image-understanding).
        public var detail: Detail?

        /// Specifies the detail level of the image. Learn more in the [Vision guide](/docs/guides/vision#low-or-high-fidelity-image-understanding).
        public enum Detail: String, Codable, CaseIterable {
            case auto
            case low
            case high
        }

        public init(url: URL, detail: Detail? = nil) {
            self.url = url
            self.detail = detail
        }

        public init(from decoder: Decoder) throws {
            let values = try decoder.container(keyedBy: StringCodingKey.self)
            self.url = try values.decode(URL.self, forKey: "url")
            self.detail = try values.decodeIfPresent(Detail.self, forKey: "detail")
        }

        public func encode(to encoder: Encoder) throws {
            var values = encoder.container(keyedBy: StringCodingKey.self)
            try values.encode(url, forKey: "url")
            try values.encodeIfPresent(detail, forKey: "detail")
        }
    }

    public init(type: `Type`, imageURL: ImageURL) {
        self.type = type
        self.imageURL = imageURL
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.type = try values.decode(`Type`.self, forKey: "type")
        self.imageURL = try values.decode(ImageURL.self, forKey: "image_url")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(type, forKey: "type")
        try values.encode(imageURL, forKey: "image_url")
    }
}
